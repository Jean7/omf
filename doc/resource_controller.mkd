# Resource Controller (RC)

## Install RC

On a typical node, you could install the RC as root:

    gem install omf_rc --no-ri --no-rdoc

If you'd like to start the Resource Controller upon booting your node, please run the following as root:

**THIS COMMAND WILL OEVERWRITE /etc/omf_rc/config.yml if the file exists**

    install_omf_rc -i -c

This installs an init script for your distribution (currently supports Debian, Ubuntu and Fedora) and installs a default RC configuration file at `/etc/omf_rc/config.yml`.

You should edit this file and set the correct values for your testbed before you can run the RC successfully. Here's an example configuration file:

    environment: production

    communication:
      url: amqp://localhost

    resources:
    - type: node
      uid: <%= Socket.gethostname %>

_Ruby's ERB syntax is used here to set the *UID* (topic name) to the output of the Ruby command *Socket.gethostname*. We assume that the host name of each node is unique (e.g. assigned via DHCP), so we can use the same configuration file for all of them._

## Start RC

If you want to start the RC using an init script and you installed this script with the '-i' flag above, you can start the daemon like this:

Ubuntu:

    start omf_rc

Debian & Fedora:

    /etc/init.d/omf_rc start

Check for the RC process by running:

    ps aux | grep omf_rc

If there is no "omf_rc" process, check the syslog for any errors that the startup script may have thrown. Also check `/var/log/omf_rc.log` for any errors.

To verify that your RC is responding correctly, we are providing a test script ({file:doc/rc\_alive\_check.rb also available here}). Open a new terminal and run:

    curl -O https://raw.github.com/mytestbed/omf/master/doc/rc_alive_check.rb
    ruby rc_alive_check.rb xmpp://<xmpp_hostname> <your hostname>

Using the same XMPP URI as in the RC config file and your local machine's hostname (run `hostname` to find out), unless you changed the :uid: parameter in the RC config file to another name. Watch the output for any lines starting with ERROR. If the RC could be contacted successfully at the "test" topic, your resource is ready to run experiments.

## Configure RC

RC could be configured via changing the configuration files. Examples can be found under https://github.com/mytestbed/omf/tree/master/omf_rc/config/

* Only load certain resource proxies and set default property value

https://github.com/mytestbed/omf/blob/master/omf_rc/config/config_node_topo_check.yml.example

* Customise Logging

https://github.com/mytestbed/omf/blob/master/omf_rc/config/with_custom_logging.yml

**ALWAYS RESTART RC TO MAKE CHANGES EFFECTIVE**

## Does My RC Work?

To check if a particular resource controller responds to FRCP messages properly, simply send a FRCP REQUEST message to the resource, and expect an answer from it. OMF provides a tiny utility to do exactly this:

    omf_send_request -r amqp://localhost/interlagos uid

It basically asks a resource called 'interlagos' about its 'uid' property. If such RC runs properly, you would see:

    interlagos
      uid: interlagos
    -----------------

Otherwise you would see NOTHING.
