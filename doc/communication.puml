

@startuml

enum MessageType {
  CREATE
  CONFIGURE
  REQUEST
  INFORM
  RELEASE
}

class Message {
  MessageType type
  publish()
  ..
  on_error(onError : Block)
}

Message ..> MessageType


class Topic {
    create_message(msg_type : MessageType) : Message
    subscribe(onMessage : Block)
    unsubscribe()
    ..
    release()
    on_error(onError : Block)
    ..
    // Create 'sub' topics
    create(topic_name : String, onMessage : Block) : Topic
    get(topic_name : String, onMessage : Block) : Topic
}


Topic ..> Message

class TopicFactory {
    create(absolute_topic_name : String, onMessage : Block) : Topic
    get(absolute_topic_name : String, onMessage : Block) : Topic
}

TopicFactory ..> Topic

class ResourceStub {
    configure(configuration: Hash, on_inform : Block)
    request(property_names : Array || nil, conditions : Hash || nil, on_inform : Block)
    on_inform(context : Object, on_inform : Block)
    release()
    ...
    get(resource_name : String) : ResourceAdapter  // child resource
}
ResourceStub "1" *-- "1" Topic : topic


class ResourceStubFactory {
    get(absolute_resource_name : String) : ResourceStub
}

ResourceStubFactory ..> ResourceStub

class ResourceProxy {
  on_create(msg : Message)
  on_configure(msg : Message)
  on_request(msg : Message)
  on_release(msg : Message)
}
ResourceProxy "1" *-- "1" Topic : topic



@enduml
