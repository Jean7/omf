#!/bin/sh

# rcS.actual is a separate file now
# this is necessary, as the inittab file processing is 
# blocked if rcS blocks (DHCP client)
# in this case the getty and ttys might not get started

mount -t proc proc /proc
# pts requires a directory for multiple pts's:
mkdir /dev/pts
mount -t devpts devpts /dev/pts

# loopback interface
ifconfig lo 127.0.0.1

# default control interface
CONTROL=eth1

UDHCPC_SCRIPT="/etc/udhcp.script"
UDHCPC="/sbin/udhcpc"
IP_CONFIG="/bin/ip"
VERSION="OMF_RELEASE"
RC_CONFIG="/etc/omf-resctl-$VERSION/omf-resctl.yaml"

# get control interface name from kernel command line
if grep -i -q "control=[a-zA-Z0-9]" /proc/cmdline
then
  CONTROL=`cat /proc/cmdline | sed 's/.*control=\([^ ]*\).*/\1/'`
  sed -i "s/:control_if:.*/:control_if: $CONTROL/g" $RC_CONFIG
fi

# get xmpp server address from kernel command line
if grep -i -q "xmpp=[a-zA-Z0-9]" /proc/cmdline
then
  XMPP=`cat /proc/cmdline | sed 's/.*xmpp=\([^ ]*\).*/\1/'` 
  sed -i "s/:pubsub_gateway:.*/:pubsub_gateway: $XMPP/g" $RC_CONFIG
fi

# get slice name from kernel command line
if grep -i -q "slice=[a-zA-Z0-9]" /proc/cmdline
then
  SLICE=`cat /proc/cmdline | sed 's/.*slice=\([^ ]*\).*/\1/'` 
  sed -i "s/:slice:.*/:slice: $SLICE/g" $RC_CONFIG
fi

$IP_CONFIG link set $CONTROL up
$UDHCPC -o -i $CONTROL -s $UDHCPC_SCRIPT

# enable logging (if the feature is built into busybox):
# Note that nodeagent doesn't use syslog anyway so you don't
# really need it unless you want to monitor some other daemons
if [ -f /sbin/syslogd ]; then
	/sbin/syslogd
else
	echo "Syslog daemon not found"
fi

# You don't need this if you have serial access ;)
if [ -f /usr/sbin/telnetd ]; then
	/usr/sbin/telnetd -l /bin/sh
else
	echo "telnet daemon not found"
fi
cat /.omf_imageid
# Start nodeagent
/etc/init.d/omf-resctl-$VERSION start
