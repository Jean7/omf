#!/usr/bin/env ruby

require "optparse"
require 'omf_common'
require 'omf_rc'
require 'omf_rc/resource_factory'
$stdout.sync = true

OmfRc::ResourceFactory.bootstrap

options = {
  uid: 'interlagos'
}

executable_name = File.basename($PROGRAM_NAME)

option_parser = OptionParser.new do |opts|
  opts.banner = "usage: #{executable_name} [options]"

  opts.on("-u USER", "Username") do |user|
    options[:user] = user
  end

  opts.on("-p PASSWORD", "Password") do |password|
    options[:password] = password
  end

  opts.on("-s SERVER", "XMPP server") do |server|
    options[:server] = server
  end

  opts.on("-n NODE", "PubSub node to create, also becomes the uid of the resource") do |node|
    options[:uid] = node
  end

  opts.on("-d", "--debug", "Debug mode") do
    options[:debug] = true
  end
end

begin
  option_parser.parse!
rescue => e
  puts e.message
  puts ""
  puts option_parser.help
  exit(1)
end

unless options[:server] && options[:user] && options[:server]
  puts option_parser.help
  exit(1)
end

Blather.logger = logger
Blather.logger.level = Logger::DEBUG if options[:debug]

logger.debug "Resource Proxy List #{OmfRc::ResourceFactory.proxy_list}"

node = OmfRc::ResourceFactory.new(:node, options)

trap(:INT) { node.disconnect }
trap(:TERM) { node.disconnect }

#EM.run { comm.connect(options[:user], options[:password], options[:server]) }
EM.run do
  node.connect
end
